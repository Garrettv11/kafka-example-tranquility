version: '3.7'
volumes:
  db-volume: null
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - app-tier
  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
    networks:
      - app-tier
  zookeeper:
    image: 'bitnami/zookeeper:3'
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:2'
    ports:
      - '9092:9092'
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - '4563-4599:4563-4599'
      - '8055:8080'
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DATA_DIR=localstack_data:/localstack/data
    volumes:
      - 'localstack_data:/localstack/data'
      - 'localstack_data:/localstack/s3'
  form:
    depends_on:
      - es01
      - es02
      - kafka
      - zookeeper
      - localstack
    build:
      context: ../form-api
      dockerfile: dev.Dockerfile
    ports:
      - '6045:6045'
    restart: always
    init: true
    healthcheck:
      test: 'curl --fail -s http://localhost:6045/version || exit 1'
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      - NODE_ENV=dev-docker
      - 'CLOUD9_NAME=${CLOUD9_NAME}'
    volumes:
      - '../form-api:/usr/src/app'
      - '~/.aws:/root/.aws'
      - /usr/src/app/node_modules/
volumes:
  data01:
    driver: local
  data02:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  localstack_data:
    driver: local


networks:
  app-tier:
    driver: bridge